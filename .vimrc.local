"*** colors and terminal settings
syntax on
let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"
set termguicolors
set background=dark
colorscheme yitzchok-contrast
hi! Normal guibg=#14181D
hi! ColorColumn ctermbg=0 guibg=NONE
hi! CursorColumn guibg=NONE
hi! CursorLine term=bold cterm=bold
hi! FoldColumn guibg=NONE
hi! Folded guibg=NONE
hi! LineNr guibg=NONE
hi! NonText guibg=NONE
hi! SignColumn guibg=NONE
hi! VertSplit guibg=NONE
hi! EndOfBuffer guibg=NONE ctermbg=NONE
hi! GitGutterAdd guibg=NONE guifg=#5fd7a7
hi! DiffAdd cterm=bold ctermfg=193 ctermbg=65  guifg=#1E242F guibg=#9CC696 gui=NONE
hi! DiffDelete cterm=bold ctermfg=234 ctermbg=9   guifg=#1E242F guibg=#E86169 gui=NONE
hi! DiffChange cterm=bold ctermbg=189 ctermbg=60  guifg=#1E242F guibg=#689ACA gui=NONE
hi! DiffText cterm=bold ctermfg=234 ctermbg=12  guifg=#1E242F guibg=#F8C76B gui=NONE
"hi! Search ctermbg=59 guibg=#313343
"hi! Pmenu ctermbg=59 guibg=#313343
"hi! PmenuSel ctermfg=16 ctermbg=122 cterm=NONE guifg=#1f212a guibg=#9aefea gui=NONE
hi! Todo guifg=#E7BE45 guibg=NONE gui=BOLD
hi! Type guifg=#E6EAEF

"*** Settings
set list
set listchars=tab:▷⋅,trail:⋅,nbsp:⋅
set tabstop=4
set shiftwidth=4
set smarttab
set expandtab
set autoindent
set smartindent
set cin
set noshowmode
set backupdir=/tmp
let g:indentLine_enabled = 0
set cursorline

"*** Settings by filetype
autocmd FileType coffee setlocal shiftwidth=2 softtabstop=2 expandtab
autocmd FileType php setlocal shiftwidth=4 softtabstop=4 expandtab

"*** function to toggle windows layout between horiz & vert
let g:hwin=1
func! ToggleWinLayout()
    if (g:hwin)
        wincmd H
        let g:hwin=0
    else
        wincmd K
        let g:hwin=1
    endif
endfunc

"*** function to toggle line numbers
let g:dnum=0
set nonumber
func! ToggleNumbers()
    if (g:dnum)
        set number! relativenumber!
        let g:dnum=0
    else
        set number relativenumber
        let g:dnum=1
    endif
endfunc

"*** key bindings
nnoremap <f1> K
nmap <f2> :below new<cr>
nmap <f3> :clo<cr>
set pt=<F4>
map <f7> <C-W>w
map <f8> :call ToggleWinLayout()<cr>
"map <f9> :set list! list? <CR>
map <f9> :IndentLinesToggle<CR>
map <f10> :call ToggleNumbers()<cr>

" Mappings: function key replacements
nmap <leader>ws :below new<cr>
nmap <leader>c :clo<cr>
nmap <leader>ww <C-w>w
nmap <leader>wl :call ToggleWinLayout()<cr>
nmap <leader>li :set list! list? <cr>
nmap <leader>ln :call ToggleNumbers()<cr>

" Mappings: general
map <C-n> :30Lex<CR>
nnoremap <leader>. :lcd %:p:h<CR>
"noremap <leader>e :e <C-R>=expand("%:p:h") . "/" <CR>
nnoremap <silent> <leader><space> :noh<cr>
nnoremap <leader>u :UndotreeShow<CR>
imap ii <Esc>

"*** commenting
map ,# :s/^/#/<CR>:nohlsearch<CR>
map ,/ :s/^/\/\//<CR>:nohlsearch<CR>
map ," :s/^/\"/<CR>:nohlsearch<CR>
map ,- :s/^/--/<CR>:nohlsearch<CR>
map ,c :s/^\/\/\\|^--\\|^> \\|^[#"%!;]//<CR>:nohlsearch<CR>
map <f5> :s/^/\/\//<CR>:nohlsearch<CR>
map <f6> :s/^\/\/\\|^--\\|^> \\|^[#"%!;]//<CR>:nohlsearch<CR>

"*** filetypes
filetype on
au BufNewFile,BufRead *.ihtml set filetype=php
autocmd FileType php set kp=:help
au BufNewFile,BufRead *.volt set filetype=html

"*** folding
let php_folding=0
set foldnestmax=1
noremap <space> za
set nofoldenable  "*** disable folding on load - use zi command to toggle
au FileType php setl nofen

"*** status line
set statusline=%<%f%h%m%r%=%b\ 0x%B\ \ %l,%c%V\ %P " legacy statusline - not used if airline active
set ttimeoutlen=50
set ls=2            "status line (2=always on)

"*** airline
let g:airline#extensions#tabline#enabled = 0
let g:airline_exclude_preview = 1
let g:airline_powerline_fonts = 1
let g:airline_left_sep=''
let g:airline_right_sep=''
let g:airline_theme = 'minimalist'
let g:airline#extensions#hunks#enabled=0

"*** gitgutter
set updatetime=100
set signcolumn=yes

"*** syntastic (syntax checking)
let g:syntastic_check_on_open = 0
let g:syntastic_check_on_wq = 1
let g:syntastic_aggregate_errors = 1
let g:syntastic_mode_map = {
    \ "mode": "passive",
    \ "active_filetypes": ['php','python'],
    \ "passive_filetypes": ['html'] }
let g:syntastic_python_pylint_post_args="--max-line-length=180"
nnoremap <silent> <leader>qa :SyntasticCheck<CR>

"*** vim-surround
nmap ss ysiw
nmap sl yss
vmap s S

"*** Search the first 20 lines for '@modified' and update with current date
function! LastMod()
  if line("$") > 20
    let l = 20
  else
    let l = line("$")
  endif
  exe "1," . l . "g/@modified /s/@modified .*/@modified " . strftime("%d-%b-%Y")
endfun
autocmd BufWrite *   ks|call LastMod()|'s
