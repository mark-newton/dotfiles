#!/bin/bash
# ----------------------------------------------------------------------------
# Install latest neovim/lunarvim
# @modified 02-Nov-2021
# ----------------------------------------------------------------------------

doBrew="false"
doDev="false"
doRel="false"
doLvim="false"

function usage() {
cat <<EOF
Usage:  $0 [OPTIONS]

This script installs latest neovim and/or lunarvim config

OPTIONS:
  -d  Neovim dev
  -r  Neovim release
  -l  Lunarvim
  -b  Brew updates
  -a  All (dev)

EOF
}

function error() {
    echo -e "Error: $1"
    [[ ! "$2" == "noexit" ]] && exit 1
}

while getopts "abdrlh" OPTION; do
    case $OPTION in
        a)
            doBrew="true"
            doDev="true"
            doLvim="true"
            ;;
        b)
            doBrew="true"
            ;;
        d)
            doDev="true"
            doRel="false"
            ;;
        r)
            doDev="false"
            doRel="true"
            ;;
        l)
            doLvim="true"
            ;;
        h)
            usage
            exit 0
            ;;
        :)
            error "Error: -$OPTION requires an argument" noexit
            usage
            exit 1
            ;;
        \?)
            error "Error: unknown option -$OPTION" noexit
            usage
            exit 1
            ;;
        *)
            [[ "$OPTARG" == "" ]] && OPTARG='"-'$OPTION' 1"'
            OPTION="OPT_$OPTION"
            eval ${OPTION}=$OPTARG
            ;;
    esac
done

[[ "${doBrew}" == "true" ]] && {
    echo "Updating Brew:"
    brew update
    brew upgrade
    brew cleanup
    brew doctor
}
[[ "${doDev}" == "true" ]] && {
    echo "Installing Neovim from dev (compile):"
    cd ~
    sudo rm -r neovim
    git clone https://github.com/neovim/neovim
    cd neovim
    sudo make CMAKE_BUILD_TYPE=Release install
    cd ~
    sudo rm -r neovim
}
[[ "${doRel}" == "true" ]] && {
    echo "Installing Neovim from release:"
    bash <(curl -s https://raw.githubusercontent.com/LunarVim/LunarVim/rolling/utils/installer/install-neovim-from-release)
}
[[ "${doLvim}" == "true" ]] && {
    echo "Installing Lunarvim:"
    bash <(curl -s https://raw.githubusercontent.com/lunarvim/lunarvim/rolling/utils/installer/install.sh)
    if [ ! -f ~/bin/lvim ]; then
        ln -s ~/.local/bin/lvim ~/bin/lvim
        echo "Added symlink to lvim"
    fi
}

echo Install complete
